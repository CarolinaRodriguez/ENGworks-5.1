
dim cr=ascii(10), lp

rem 
rem *** TEST INTERNAL OBJECTS
rem
if query("Perform Internal Object Tests?") then

  rem ** test file access by copying the contents of a text file in text mode
  object file1 = new file(mappath_home+"test.txt", forinput+istext)
  object file2 = new file(mappath_home+"test2.txt", foroutput+istext)

  if file1.isopen and file2.isopen then
  
    dim wrote
    
    while not file1.eof
      dim v= file1.readline()
      wrote = wrote + v + cr
      file2.writeline(v)
    end while
    
    debug "Text Mode Wrote: " + cr + cr + wrote    
  else  
    debug "Text: Unable to open file(s)"    
  end if
  
  file1.close()
  file2.close()

  rem ** test file access by appending the contents of a text file in binary mode
  file1.open(mappath_home+"test.txt", forinput)
  file2.open(mappath_home+"test2.txt", forinput+foroutput)

  if file1.isopen and file2.isopen then
  
    file2.position = file_end
    
    dim wrote
    
    while not file1.eof
      dim v= file1.readchar()
      wrote = wrote + v
      file2.writechar(v)
    end while
    
    debug "Binary Mode Wrote: " + cr + cr + wrote    
  else  
    debug "Binary: Unable to open file(s)"    
  end if
  
  file1.close()
  file2.close()
      
  dim mapini=mappath_home+"MAP.INI"
  
  dim numpad=readini( mapini, "GENERAL", "NUMPAD", "Not Set")
  debug "Numpad is " + numpad
  if numpad="OFF" then numpad = "ON" else numpad = "OFF"    
  if writeini( mapini, "GENERAL", "NUMPAD", numpad ) then
    debug "Changed Numpad to " + numpad
  else
    debug "Failed to write to file " + mapini
  endif
  
  writetolog( debuglog, "This is a debug.log test: " )
  writetolog( debuglog, "was it successful ?" + cr + "Maybe :)" )
  
end if
 
rem 
rem ** TEST STRING FUNCTIONS
rem 
if query("Perform String Tests?") then
  dim astring = "   Hello there, my name is Fred and I am a computer programmer       "

  dim _ltrim = "LTRIM: '"+ltrim(astring)+"'"
  dim _rtrim = "RTRIM: '"+rtrim(astring)+"'"
  astring=trim(astring)
  dim _trim = "TRIM: '"+astring+"'"

  dim _lower = "Lower: " + lower(astring)
  dim _upper = "Upper: " + upper(astring)

  debug _ltrim + cr + _rtrim + cr + _trim + cr + _lower + cr + _upper

  dim fredat = instr(1, astring, "fred")
  debug "fred exists at pos " + fredat + cr + cr + astring
  
  dim fred=mid(astring, fredat, 4)
  dim jim=left(astring, fredat-1) + "Jim" + right(astring, len(astring)-fredat-4)
  debug fred + " changed to " + jim
  
end if

rem
rem ** TEST MATH FUNCTIONS
rem 
if query("Perform Maths Tests") then
  rem ** check maths functions
  dim _sqrt = "Sqrt(16)=" + Sqrt(16) + cr
  dim _sign = "Sign(4)=" + Sign(4) + " Sign(0)=" + Sign(0) + " Sign(-4)=" + Sign(-4) + cr
  dim _abs  = "Abs(4)=" + Abs(4) + " Abs(0)=" + Abs(0) + " Abs(-4)=" + Abs(-4) + cr
  dim _sin  = "Sin(30)=" + Sin(30) + cr
  dim _cos  = "Cos(30)=" + Cos(30) + cr
  dim _tan  = "Tan(30)=" + Tan(30) + cr
  dim _asin = "Asin(3,4)=" + Asin(3,4) + cr
  dim _acos = "Acos(3,4)=" + Acos(3,4) + cr
  dim _atan = "Atan(3,4)=" + Atan(3,4) + cr
  dim _log  = "Log(10)=" + Log(10) + cr
  dim _exp  = "Exp(2)=" + Exp(2) + cr
  dim _pow  = "Pow(4,3)=" + Pow(4,3) + cr
  debug "Maths: " + cr+cr + _sqrt + _sign + _abs + _sin + _cos + _tan + _asin + _acos + _atan + _log + _exp + _pow
end if

rem
rem *** TEST BASIC FUNCTIONALITY
rem
if query("Perform Basic Functionality Tests?") then
  rem ** do while/until loops
  dim test1=1
  do while test1<5
    debug test1
    test1 = test1 + 1
  loop
  
  dim test2=10
  do
    debug test2
    test2 = test2 - 1
  loop until test2=0
  
  dim test3 = 7
  while test3<10
    debug test3
    test3 = test3 + 1
  end while

  rem ** single line if statements
  dim fred = "fred"
  if fred = "burp" then debug "hi burp!" else debug "Who is " + fred + " ?"

  dim val, allval
  for val = 0 to 15
    dim isval
    select val
      case 1
        isval= "is 1"
      case 2 to 3
        isval= "is 2 or 3"
      case 4 to 10, 13
        isval= "is 4-10 or 13"
      case >10
        isval= "> 10 and not 13"
      case else
        isval= "<1"
    end select
    allval = allval + val + ": " + isval + cr
  next
  debug allval
     
end if

rem
rem *** TEST INTERNAL CALLS ***
rem
if query("Perform Item Property Tests?") then
  rem ** setting connector values
  for lp=1 to item.connectors
    item.connector[lp].value="15 Flange"
    item.connector[lp].locked=true
  next
  rem ** enforce spec, redevelop etc
  if not item.update() then
    debug "Item "+ item.number + " failed to update"
  end if
end if

