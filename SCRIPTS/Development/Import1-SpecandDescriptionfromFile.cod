dim rootpath = mappath_items
REM dim rootpath = ""
REM This scripts imports from a csv file (C:/ITEMREPORTIN.CSV) 
REM Import is in to the EST-Duct/EST-Mech Item Folders
REM Text File must be Path, Spec, Original Size, New Size
REM Path should be without the Root of the Path
REM Spec should all be None

dim csv =  "C:/ITEMREPORTIN.CSV"
dim delimiter = ","

requires task
 
dim csvfile as file( csv, forinput + istext)
if csvfile.isopen then

  task.beginprogress(csvfile.length)
 
  dim anitem = false
 
  while not csvfile.eof and not task.aborted

    task.progress = csvfile.position
 
    dim entry=csvfile.readline()
 
    dim ItemFile = ""
    dim oldProductName = ""
    dim newProductName = ""
    dim Spec= ""
    rem parse line of csv file
    dim c = instr( 1, entry, delimiter )
    if c>1 then
 
      ItemFile = substring(entry, 1, c-1)
      ItemFile = trim(ItemFile)
      ItemFile = rootpath + ItemFile
      dim c2 = instr(c+1, entry, delimiter)
      if c2>c+1 then
        Spec=substring(entry, c+1, c2-1)
        Spec=trim(Spec)
      endif
      dim c3 = instr(c2+1, entry, delimiter)
      if c3>c2+1 then
         oldProductName=substring(entry, c2+1, c3-1)
         oldProductName=trim(oldProductName)
      endif

      newProductName=substring(entry, c3+1, 0)
      newProductName=trim(newProductName)

      if len(ItemFile)>0 then
        anitem = new itemstruct
        if anitem.load( ItemFile ) then
          anitem.SpecLock = FALSE
          anitem.Specification = Spec
          if anItem.hasproduct then
            dim lp2=1
            dim found = false
            while not found and lp2<=anitem.product.entries
              if anitem.product.entry[lp2].name = oldProductName then
                anitem.product.entry[lp2].name = newProductName
                lp2=anitem.product.entries
                found = true
              endif
              lp2=lp2+1
            end while
          endif
          anitem.save(itemfile)
        endif
      endif
    endif
  end while
endif
task.endprogress()