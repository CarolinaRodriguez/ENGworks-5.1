dim rootpath = "C:\Dropbox (Comfort Systems USA)\AutoDesk Fabrication\CSUSA_Items\Hangers\Unistrut Hangers/"
dim pathfrom = "items"

REM *** DONT CHANGE ANYTHING AFTER THIS ***
requires task
dim cr = ascii(10)

function getrelativefrom( path, relativefrom )
  dim rellen=len(relativefrom)
  dim rel = instr(1, path, "\" + relativefrom + "\")
  if not rel then rel = instr(1, path, "/" + relativefrom + "/")
  dim rv
  if rel then
    rv = substring( path, rel+rellen+2, 0 )
  else
    rv = path
  endif

  return rv
endfunction

function UpdateItem ( path )
  rem scan for all items in the specified folder
  dim filescan as filelocator
  filescan.scan(path, "*.itm", true, false)
 
  dim folderscan as filelocator
  folderscan.scan(path, "*.*", false, true)
 
  dim lp, lp2

  dim progressfiles = (folderscan.foldercount = 0)
 
  if progressfiles then task.beginprogress(filescan.filecount)
 
  for lp=1 to filescan.filecount
 
    rem load the item
    dim item as itemstruct
 
    dim loadfile=filescan.file[lp]
    dim sf=getrelativefrom( path, pathfrom )
    sf=substring(sf,1,-1)
    sf=GetFilename(sf)

    rem show parent folder name and itm filename
    task.message = sf + cr + GetFilename( loadfile )
 
    if item.load(loadfile) then


rem vvvvvvvv This is where you want to add the code for what you want to Change vvvvvvv
    if (item.cid = 838) then
     Dim HangType = item.option[1].value
      if HangType="Wrap-Round Hanger" or HangType="Clipped Flat Strap Hanger" or HangType="Clevis Hanger" or  HangType="V Bottom Clevis" or HangType="J" or HangType="J 2" or HangType="Slide" or HangType="Conduit Clamp" then
        if item.support.value <>"FAB-Band Hanger" then
        item.support.value="FAB-Clevis Hanger"
        Endif
      item.support.qty=1
      Item.option["Add Rod Size"].value = "Yes"
      Item.option["Use Support Settings"].value = "Yes"
      Item.option["Export"].value = "All"
      endif

       if HangType="Roll Clevis Hanger" then
        item.support.value="FAB-Roll Clevis Hanger"
      item.support.qty=1
      Item.option["Add Rod Size"].value = "Yes"
      Item.option["Use Support Settings"].value = "Yes"
      item.option["High Detail Roller"].value = "Yes"
      Item.option["Export"].value = "All"
      endif

      if HangType="Roll" or HangType="Double Slide" then
        if Item.dim[3].numvalue > -.01 then
        item.support.value="FAB-Dbl Rod Roll Hanger"
        item.support.qty=2
        Item.option["Add Rod Size"].value = "Yes"
        Item.option["Use Support Settings"].value = "Yes"
        item.option["Stretch Rods Separately"].value = "Yes"
        item.option["High Detail Roller"].value = "Yes"
        Endif
      endif
 
    if HangType = "Profiled Bearer" or HangType = "Split Ring" or HangType = "Double Profile Bearer"  or HangType = "Double Profile Bearer 2"  or HangType = "Stirrup"  then
    item.option["Stretch Rods Separately"].value = "Yes"
    Item.option["Export"].value = "All"
    Item.option["Add Rod Size"].value = "Yes"
    endif
    if HangType = "Floor-Roof Support" or HangType = "Flat Strap Hanger" then
    Item.option["Export"].value = "All"
    Item.option["Add Rod Size"].value = "Yes"
    endif
    endif

rem ^^^^^^^Stop the code here ^^^^^^


  if item.save(loadfile) = 0 then error "unable to save file " + loadfile
      endif
rem    endif
 

    if task.aborted then
      lp=filescan.filecount
    endif
 
    if progressfiles then task.progress = task.progress + 1

  next lp

  if progressfiles then
    task.endprogress()
  else
    task.beginprogress( folderscan.foldercount )
  endif
 
  for lp=1 to folderscan.foldercount
 
    dim nextpath = folderscan.folder[lp]
 
    task.message = "Scanning " + cr + nextpath
 
    UpdateItem( nextpath )

    if task.aborted then
      lp=folderscan.foldercount
    endif

    if not progressfiles then task.progress = task.progress + 1
 
  next lp

  if not progressfiles then task.endprogress()
 
end function
 
 
 task.beginprogress( 1 )
 task.progress = 0
 UpdateItem( rootpath )
 task.endprogress()